name: CI/CD Pipeline

on:
  push:
    branches:
      - "dev"
      - "master"

jobs:
    test-and-build-dev:
    if: github.ref == 'refs/heads/dev'
    runs-on: self-hosted
    services:
      postgres:
        image: postgres:15-alpine
        ports:
          - "5432:5432"
        env:
          POSTGRES_DB: kubsu
          POSTGRES_USER: kubsu
          POSTGRES_PASSWORD: kubsu
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code (dev)
        uses: actions/checkout@v4
        with:
          ref: dev

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build dev container
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile.dev
          tags: ${{ vars.DOCKERHUB_USERNAME }}/python_app_dev:latest
          load: true

      - name: Run tests
        run: |
          docker run --rm --network=host ${{ vars.DOCKERHUB_USERNAME }}/python_app_dev:latest

      - name: Push dev image to Docker Hub
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          file: ./Dockerfile.dev
          tags: ${{ vars.DOCKERHUB_USERNAME }}/python_app_dev:latest

  deploy-prod:
    if: github.ref == 'refs/heads/master'
    needs: test-and-build-dev  
    runs-on: self-hosted
    
    steps:
      - name: Checkout code (master)
        uses: actions/checkout@v4

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push prod image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile.prod
          push: true
          tags: ${{ vars.DOCKERHUB_USERNAME }}/python_app_prod:latest

      - name: Deploy to server via SSH
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.SSH_USERNAME }} 
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            podman login -u ${{ vars.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }} docker.io
            podman stop python_app_prod || true
            podman rm python_app_prod || true
            podman rmi ${{ vars.DOCKERHUB_USERNAME }}/python_app_prod:latest || true
            podman pull ${{ vars.DOCKERHUB_USERNAME }}/python_app_prod:latest
            podman run -d --name python_app_prod --network host ${{ vars.DOCKERHUB_USERNAME }}/python_app_prod:latest
            echo "Container deployed successfully!"

  merge-dev-to-master:
    if: github.ref == 'refs/heads/dev' && github.event_name == 'push'
    needs: test-and-build-dev
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Merge dev into master
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git checkout master
          git merge dev --no-ff -m "Auto-merge: dev â†’ master"
          git push origin master
